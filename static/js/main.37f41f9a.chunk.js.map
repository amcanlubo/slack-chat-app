{"version":3,"sources":["components/Reducer.js","components/Store.js","images/chim2.png","images/chatbubble.png","components/Login.js","images/chimchimmmm.png","components/Signup.js","components/Logout.js","components/Modal.js","components/TopNav.js","components/AddChannelModal.js","components/useInterval.js","components/SidebarDMs.js","components/Sidebar.js","components/RightSideNav.js","components/ScrollToBottom.js","images/NoChatYet.svg","components/ChatForm.js","components/ChatFeed.js","images/BT21.gif","images/bubble.png","components/Homepage.js","App.js","index.js"],"names":["Reducer","state","action","type","ChatInfo","payload","initialState","Context","createContext","Store","children","useReducer","dispatch","Provider","value","Login","setShowLoginModal","useState","rememberme","setRememberMe","history","useHistory","signinEmailRef","useRef","signinPasswordRef","className","onSubmit","e","preventDefault","userData","email","current","password","axios","post","then","data","toast","success","headers","push","pathname","sessionStorage","setItem","JSON","stringify","localStorage","console","log","catch","error","handleLogin","onClick","src","chimchim","alt","chatbubble","htmlFor","placeholder","ref","checked","onChange","Signup","setshowSignupModal","emailRef","passwordRef","confirmpasswordRef","url","password_confirmation","result","chimmy","Logout","userHeaders","setHeaders","window","location","reload","clear","Modal","useContext","showModal","setShowModal","uid","TopNav","AddChannelModal","handleAddChannelButtonClick","updateChannelList","setUpdateChannelList","member","channelName","members","setMembers","allUsers","setAllUsers","memberIDs","getMembersUID","map","array","string","memberInfo","toLowerCase","filter","o","Object","keys","some","k","String","includes","id","useEffect","get","defaults","baseURL","response","createChannel","useInterval","callback","delay","savedCallback","React","setInterval","clearInterval","SidebarDMs","channels","updateChatForm","senderDatas","setSenderDatas","directMessagesSubMenuToggle","setDirectMessagesSubMenuToggle","dmEnabledUsers","setDMEnabledUsers","allUserIDs","allDMEnabledUserNames","senderDatasRef","getAllUsers","getChannelMembersInbox","user","channel","channel_members","item","user_id","indexOf","sendToSelect","senderData","sender","receiver","name","Sidebar","addChannelModalToggle","setAddChannelModalToggle","setChannels","IDState","setIDState","channelsSubMenu","setChannelsSubMenu","nameState","setNameState","receiverClass","setReceiverClass","setSidebar","tempChannels","chatInfo","ID","errors","finally","RightSideNav","users","setUsers","names","setNames","selectOptions","selectedOption","setSelectedOption","forEach","label","options","alert","ScrollToBottom","elementRef","scrollIntoView","ChatForm","date","time","chatRef","messageRef","enableDMUsers","isLoading","setIsLoading","message","setMessage","selectedUser","setSelectedUser","userID","getMessage","length","messages","addMessage","output","class","NoChatVector","index","Date","created_at","toDateString","slice","hours","getHours","minutes","getMinutes","amPm","convTime","body","xmlns","viewBox","fill","d","ChatFeed","useLocation","to","Homepage","showLoginModal","showSignupModal","handleLoggedIn","BT21","logo","App","exact","path","theme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.37f41f9a.chunk.js","sourcesContent":["const Reducer = (state,action) => {\r\n    switch(action.type){\r\n        \r\n        case 'PASS_TO_CHATFORM':\r\n            return{\r\n                ...state,\r\n                ChatInfo: action.payload\r\n            };\r\n            default: return state;\r\n    };\r\n};\r\n\r\nexport default Reducer\r\n","import React, {createContext, useReducer} from 'react';\r\nimport Reducer from './Reducer';\r\n\r\nconst initialState = {\r\n    ChatInfo: \"\" \r\n};\r\n\r\nconst Store=({children})=>{\r\n    const[state,dispatch] = useReducer(Reducer,initialState);\r\n    \r\n    return(\r\n        <Context.Provider value={[state, dispatch]}>\r\n            {children}\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport const Context = createContext(initialState);\r\n\r\nexport default Store;","export default __webpack_public_path__ + \"static/media/chim2.f3835cfe.png\";","export default __webpack_public_path__ + \"static/media/chatbubble.26d29a27.png\";","import React, { useRef, useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport chimchim from '../images/chim2.png'\r\nimport chatbubble from '../images/chatbubble.png'\r\nimport { XIcon } from '@heroicons/react/outline'\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\nconst Login = ({setShowLoginModal}) => {\r\n  \r\n    const [rememberme, setRememberMe] = useState(false) \r\n    let history = useHistory()\r\n    let signinEmailRef = useRef(null)\r\n    let signinPasswordRef = useRef(null)\r\n    const url = 'https://slackapi.avionschool.com'\r\n\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        const userData = {\r\n            email: signinEmailRef.current.value,\r\n            password: signinPasswordRef.current.value,\r\n        }\r\n\r\n\r\n        axios.post(`${url}/api/v1/auth/sign_in`, userData)\r\n            .then((data) => {     \r\n                toast.success('You successfully logged in')\r\n                const { headers } = data\r\n                \r\n                history.push({\r\n                    pathname: '/chatfeed',\r\n                    state: { headers }\r\n                })\r\n                //save to session storage and local storage\r\n                sessionStorage.setItem('headers', JSON.stringify(data))\r\n\r\n                if (rememberme) {\r\n                    localStorage.email=userData.email\r\n                    localStorage.password=userData.password\r\n                }\r\n\r\n                console.log(data)\r\n            })\r\n            \r\n            // .catch((error) => alert(error));  \r\n            .catch((error) => toast.error('Check errors'))\r\n        }\r\n\r\n       \r\n    return (\r\n        <>\r\n        \r\n            <div className=\"z-50 container w-full max-w-xl absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n                \r\n                <form className=\"bg-white shadow-md rounded-lg px-8 py-2 pt-6 pb-8 mb-4 font-Lato bg-primary\" \r\n                onSubmit={(e)=>{handleLogin(e)}}>\r\n                                  \r\n                    <div className='w-full flex justify-between items-center relative bottom-2'>    \r\n                        <span\r\n                        className=\"bg-transparent border-0 text-secondary text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                        onClick={(e) =>{e.preventDefault()\r\n                        setShowLoginModal(false)}}>\r\n                            <XIcon className='h-8 w-8 mb-16 rounded-full flex items-center justify-center hover:bg-white hover:rounded-full transform hover:scale-110'/>      \r\n                        </span>  \r\n                        <img src={chimchim} alt='chimchim' className='relative left-16 h-28' />\r\n                        <img src={chatbubble} alt='chatbubble' className='relative bottom-2 h-28' />\r\n                    </div>\r\n                    \r\n                    <div className='relative bottom-2'>\r\n\r\n                    <div className=\"mb-6 flex-col\">\r\n                        <label htmlFor=\"username\" className=\"block text-gray-700 text-sm font-bold mb-2\" >\r\n                            Email\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            type=\"email\" placeholder=\"enter email\" ref={signinEmailRef} />\r\n                    </div>\r\n                    <div className=\"mb-6\">\r\n                        <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\" >\r\n                            Password\r\n                        </label>\r\n                        <input className=\"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                            type=\"password\" placeholder=\"enter password\" ref={signinPasswordRef} />\r\n                    </div>\r\n                    \r\n                    <div className='h-12 justify-center items-center content-center'>\r\n                        \r\n                        <input type=\"checkbox\" \r\n                        className='mr-2' \r\n                        checked ={rememberme}\r\n                        onChange={()=>{setRememberMe(!rememberme)}}\r\n                        />    \r\n                        <span className=\"checkmark\">Keep me logged in</span>  \r\n                    </div>\r\n\r\n                    <div className=\"flex items-center justify-between\">\r\n                        <button className=\"w-full bg-secondary text-primary font-bold py-2 px-4 rounded-full focus:outline-none focus:shadow-outline hover:text-white\"\r\n                        >Sign In\r\n                        </button>\r\n                    </div>\r\n                    </div>\r\n                </form>           \r\n            </div>\r\n            \r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Login","export default __webpack_public_path__ + \"static/media/chimchimmmm.6861fe93.png\";","import React, { useRef, useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios'\r\nimport { toast } from 'react-toastify';\r\nimport chimmy from '../images/chimchimmmm.png'\r\nimport {XIcon} from '@heroicons/react/outline'\r\n\r\n\r\nfunction Signup({setshowSignupModal}) {\r\n\r\n    let history = useHistory()\r\n    let emailRef = useRef(null)\r\n    let passwordRef = useRef(null)\r\n    let confirmpasswordRef = useRef(null)\r\n    const [image, setImage] = useState(null)\r\n    \r\n\r\n    const url = 'https://slackapi.avionschool.com'\r\n    \r\n    const handleSignup = (e) => {\r\n        e.preventDefault()\r\n        \r\n        const data = {\r\n            email: emailRef.current.value,\r\n            password: passwordRef.current.value,\r\n            password_confirmation: confirmpasswordRef.current.value,\r\n        }\r\n\r\n        axios.post(`${url}/api/v1/auth/`, data)\r\n            .then((result) => {\r\n                const userData = {\r\n                    email: emailRef.current.value,\r\n                    password: passwordRef.current.value,\r\n                }\r\n                axios.post(`${url}/api/v1/auth/sign_in`, userData) \r\n\r\n          \r\n            .then((data) => {\r\n                const { headers } = data\r\n                console.log(result)\r\n                console.log(data)\r\n                toast.success('You successfully registered')\r\n                emailRef.current.value=''\r\n                passwordRef.current.value=''\r\n                confirmpasswordRef.current.value=''\r\n                history.push({\r\n                    pathname: '/chatfeed',\r\n                    state: { headers }\r\n                })\r\n                //save to session storage\r\n                sessionStorage.setItem('headers', JSON.stringify(data))\r\n                console.log(data)\r\n            })\r\n           \r\n            .catch((error) => toast.error('Check errors'));               \r\n            })       \r\n    }\r\n\r\n    // const handleUpload = (event) => {\r\n    //     setImage({ files: event.target.files, text: '' });\r\n    //   };\r\n\r\n\r\n    return (\r\n        <div className=\"z-50 container w-full max-w-xl absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\">\r\n            <form className=\"bg-white shadow-md rounded-lg px-8 pt-8 pb-8 mb-4 font-Lato bg-primary\" onSubmit={handleSignup}>\r\n                \r\n                <div className='relative bottom-5 right-2 w-full flex justify-between items-center content-center'>\r\n\r\n                    <img src={chimmy } alt='chimchim' className='h-28' />  \r\n                    <h1 className=\"text-secondary desktop:text-2xl mobile:text-xs font-bold mr-4\" >CREATE AN ACCOUNT</h1>   \r\n                    <span\r\n                    className=\"bg-transparent border-0 text-secondary text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                    onClick={() => setshowSignupModal(false)}\r\n                    >\r\n                    <XIcon className='h-8 rounded-full flex items-center justify-center hover:bg-white hover:rounded-full transform hover:scale-110'/>      \r\n                    </span>  \r\n                </div>\r\n\r\n                <div className=\"mb-6 flex-col\">\r\n                    <label htmlFor=\"username\" className=\"block text-gray-700 text-sm font-bold mb-2\" >\r\n                        Email\r\n                    </label>\r\n                    <input\r\n                        ref={emailRef}\r\n                        className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n                        type=\"email\"\r\n                        placeholder=\"enter email\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-6\">\r\n                    <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\" >\r\n                        Password\r\n                    </label>\r\n                    <input\r\n                        ref={passwordRef}\r\n                        className=\"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                        type=\"password\"\r\n                        placeholder=\"enter password\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-6\">\r\n                    <label htmlFor=\"password\" className=\"block text-gray-700 text-sm font-bold mb-2\" >\r\n                        Confirm Password\r\n                    </label>\r\n                    <input\r\n                        ref={confirmpasswordRef}\r\n                        className=\"shadow appearance-none border border-red-500 rounded w-full py-2 px-3 text-gray-700 mb-3 leading-tight focus:outline-none focus:shadow-outline\"\r\n                        type=\"password\"\r\n                        placeholder=\"confirm password\"\r\n                    />\r\n                </div>\r\n                \r\n                <div className=\"flex items-center justify-between\">\r\n                    <button\r\n                        className=\"w-full bg-secondary text-primary font-bold py-2 px-4 rounded-full focus:outline-none focus:shadow-outline hover:text-white \"\r\n                        type=\"submit\">\r\n                        Sign Up\r\n                    </button>\r\n                </div>\r\n                    {/* <div className=\"signup-caption\">\r\n                        Already have an account?\r\n                        <div onClick={handleOnClick}>Log In</div>\r\n                    </div> */}\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","import { useHistory } from \"react-router\";\r\nimport { useState } from \"react\";\r\n\r\nconst Logout = ({userHeaders}) => {\r\n\r\n    const history = useHistory();\r\n    const [headers, setHeaders] = useState({userHeaders})\r\n       \r\n    function clear() {\r\n        setHeaders([])\r\n        window.location.reload()\r\n        sessionStorage.clear();\r\n        localStorage.clear();\r\n        history.push('/')   \r\n    }\r\n   \r\n    return (\r\n        <>\r\n            <span className='hover:text-secondary text-primary text-sm' onClick={clear}>Logout</span>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Logout","import React, { useState, useContext } from \"react\";\r\nimport { Context } from './Store';\r\n\r\nimport {UserCircleIcon} from '@heroicons/react/solid'\r\n\r\n  const Modal=({userHeaders})=> {\r\n  const [state, dispatch] = useContext(Context);\r\n  const [showModal, setShowModal] = useState(false);\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <button\r\n        className=\"font-bold\"\r\n        type=\"button\"\r\n        // onClick={() => setShowModal(true)}\r\n      >\r\n       <UserCircleIcon className=\"h-4 w-4\"/>\r\n      </button>\r\n      {showModal ? (\r\n        <>\r\n          <div\r\n            className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\"\r\n          >\r\n            <div className=\"relative w-auto my-6 mx-auto max-w-sm\">\r\n             \r\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n               \r\n                <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\r\n                  <h3 className=\"text-3xl text-black font-semibold\">\r\n                  {userHeaders.headers.uid}\r\n                  </h3>\r\n                  <button\r\n                    className=\"p-1 ml-auto bg-transparent border-0 text-black opacity-5 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    <span className=\"bg-transparent text-black opacity-5 h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                      ×\r\n                    </span>\r\n                  </button>\r\n                </div>\r\n                \r\n                <div className=\"relative p-6 flex-auto\">\r\n                  <p className=\"my-4 text-blueGray-500 text-lg leading-relaxed\">\r\n                    USER INFO\r\n                  </p>\r\n                </div>\r\n               \r\n                <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\r\n                  <button\r\n                    className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                    type=\"button\"\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    Close\r\n                  </button>\r\n                  \r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n\r\n  )\r\n    }\r\n\r\n  export default Modal","import React from 'react'\r\nimport Logout from './Logout'\r\nimport Modal from './Modal'\r\n\r\nconst TopNav = ({userHeaders}) => {\r\n    return (\r\n        <div className='z-40 w-full justify-end flex px-5 text-white bg-yellow-400 h-6 content-center items-center '>\r\n            <div className='flex justify-around content-center items-center'>\r\n                <Modal userHeaders={userHeaders} />\r\n                <span className='pr-5 pl-1 text-sm'>{userHeaders.headers.uid}</span>\r\n            </div>       \r\n            <Logout userHeaders={userHeaders}  />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TopNav\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { XIcon } from '@heroicons/react/outline'\r\n\r\n\r\nconst AddChannelModal = ({ handleAddChannelButtonClick, userHeaders, updateChannelList, setUpdateChannelList }) => {\r\n    \r\n    let member = useRef(null)\r\n    let channelName = useRef(null)\r\n    const [members, setMembers] = useState([])\r\n    const [allUsers, setAllUsers] = useState([])\r\n    let memberIDs = []\r\n    const addMember = () => {\r\n        setMembers([...members, member.current.value])\r\n    }\r\n\r\n\r\n    function filterByValue(array, string) {\r\n        return array.filter(o =>\r\n            Object.keys(o).some(k =>String(o[k]).toLowerCase().includes(string.toLowerCase())));\r\n    }\r\n    \r\n    const getMembersUID = () => {\r\n        members.map((member)=>{\r\n            let memberInfo = filterByValue(allUsers, member.toLowerCase())\r\n            memberIDs.push(memberInfo[0].id)\r\n            // setMembersUID([...membersUID, memberInfo[0].id])\r\n            // setMembersUID([...membersUID, membersInfo.user_id])\r\n        })\r\n        console.log(memberIDs)\r\n    }\r\n\r\n    const createChannel = (e) => {\r\n\r\n        e.preventDefault()\r\n        getMembersUID()\r\n        axios.post(`${axios.defaults.baseURL}/api/v1/channels `,\r\n            {\r\n                'name': channelName.current.value,\r\n                'user_ids': memberIDs\r\n            }\r\n            , userHeaders)\r\n            .then((response) => {\r\n                console.log(response)\r\n                updateChannelList ? setUpdateChannelList(false) : setUpdateChannelList(true);\r\n                handleAddChannelButtonClick()\r\n                setMembers([])\r\n\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${axios.defaults.baseURL}/api/v1/users`, userHeaders)\r\n            .then((response) => {\r\n                setAllUsers(response.data.data)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none justify-center items-center\" id=\"modal-example-small\">\r\n            <div className=\"relative w-auto my-6 mx-auto max-w-sm\">\r\n                <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                    <div className=\"flex items-start justify-between p-5 border-b border-solid border-gray-200 rounded-t\">\r\n                        <h3 className=\"text-3xl font-semibold\">\r\n                            Create Channel\r\n                        </h3>\r\n                        <button\r\n                            className=\"p-1 ml-auto bg-transparent border-0 text-gray-300 float-right text-3xl leading-none font-semibold outline-none focus:outline-none\"\r\n                            onClick={handleAddChannelButtonClick}>\r\n                            <span className=\"bg-transparent h-6 w-6 text-2xl block outline-none focus:outline-none\">\r\n                                <XIcon />\r\n                            </span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"relative p-6 flex-auto\">\r\n                        <label className=\"block\">\r\n                            <span className=\"text-gray-700\">Channel Name</span>\r\n                            <input ref={channelName} className=\"appearance-none border mt-1 block w-full focus:outline-none\" placeholder=\"new-channel\" />\r\n                        </label>\r\n                        <label className=\"block pt-4\">\r\n                            <span className=\"text-gray-700\">Add Members</span>\r\n                            <input ref={member} className=\"appearance-none border mt-1 block w-full focus:outline-none\" placeholder=\"johndoe@email.com\" />\r\n                            <button className=\"bg-yellow-500 hover:bg-yellow-700 text-white px-2 mt-1 font-bold rounded\" onClick={addMember}>Add</button>\r\n                        </label>\r\n                        <div>\r\n                            {members.map((member) => (\r\n                                <p>{member}</p>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-end p-6 border-t border-solid border-gray-200 rounded-b\">\r\n                        <button\r\n                            className=\"text-yellow-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                            type=\"button\" onClick={handleAddChannelButtonClick}>\r\n                            Cancel\r\n                        </button>\r\n                        <button\r\n                            className=\"bg-yellow-500 text-white active:bg-yellow-600 font-bold uppercase text-xs px-4 py-2 rounded shadow hover:shadow-md outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                            type=\"submit\" onClick={(e) => { createChannel(e) }}>\r\n                            Create Channel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddChannelModal\r\n","import React from 'react'\r\n\r\nconst useInterval = (callback, delay) => {\r\n    const savedCallback = React.useRef();\r\n  \r\n    React.useEffect(() => {\r\n      savedCallback.current = callback;\r\n    }, [callback]);\r\n  \r\n    React.useEffect(() => {\r\n      const tick = () => {\r\n        savedCallback.current();\r\n      }\r\n      if (delay !== null) {\r\n        let id = setInterval(tick, delay);\r\n        return () => clearInterval(id);\r\n      }\r\n    }, [delay]);\r\n  };\r\n\r\n  export default useInterval","import axios from 'axios'\r\nimport React, { useState, useEffect, useRef } from 'react'\r\nimport useInterval from './useInterval'\r\nimport { ChevronDownIcon, ChevronRightIcon, PlusIcon } from '@heroicons/react/solid'\r\n\r\nconst SidebarDMs = ({ userHeaders, channels, updateChatForm }) => {\r\n    const [senderDatas, setSenderDatas] = useState([])\r\n    const [directMessagesSubMenuToggle, setDirectMessagesSubMenuToggle] = useState(true)\r\n    const [dmEnabledUsers, setDMEnabledUsers] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    let allUserIDs = useRef([])\r\n    let allDMEnabledUserNames = []\r\n    let senderDatasRef = useRef([])\r\n\r\n\r\n\r\n    const handleDMsDropdown = () => {\r\n        directMessagesSubMenuToggle ? setDirectMessagesSubMenuToggle(false) : setDirectMessagesSubMenuToggle(true)\r\n\r\n\r\n    }\r\n\r\n    // const getChat = () => {\r\n    //     channels.map(\r\n    //         (channel) => {\r\n    //             axios.get(`${axios.defaults.baseURL}/api/v1/channels/${channel.id}`, userHeaders)\r\n    //                 .then((response) => {\r\n\r\n    //                     // console.log(response.data.data)\r\n    //                     response.data.data.channel_members.map((channelMember) =>{\r\n\r\n    //                         // getInbox(channelMember)\r\n    //                         isInArray(allUserIDs, channelMember.user_id)\r\n    //                         allUserIDs.map((user) => {\r\n    //                             getInbox(user)\r\n\r\n    //                         })\r\n    //                 }\r\n    //                     )\r\n    //                 })\r\n    //                 .catch(error => console.log(error))\r\n\r\n    //         }\r\n    //     )\r\n    //         setSenderDatas(senderDatasRef.current)\r\n    //     dmEnabledUsers.map((dmEnabledUser) => {\r\n    //         users.map((user) => {\r\n    //             if (user.id === dmEnabledUser) {\r\n    //                 allDMEnabledUserNames.push({\r\n    //                     'value': { 'id': user.id, 'name': user.uid },\r\n    //                     'label': user.uid\r\n    //                 })\r\n    //             }\r\n    //         }\r\n    //         )\r\n\r\n\r\n    //     })\r\n    // }\r\n\r\n    // // setInterval(() => {\r\n    // //     getChat()\r\n    // // }, 3000);\r\n\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setDMEnabledUsers([])\r\n    //     getChat()\r\n    //     // setSenderDatas(senderDatasRef.current)\r\n\r\n    // }, [channels])\r\n\r\n\r\n    // useInterval(()=>{\r\n    //     getChat()\r\n    // },30000)\r\n\r\n    const isInArray = (array, item) => {\r\n        if (array.indexOf(item) === -1) {\r\n            array.push(item)\r\n            //return true\r\n        } //else return false\r\n    }\r\n\r\n    // // const objIsInArray = (array, obj) => {\r\n    // //         if(array.length===0){\r\n    // //             senderDatasRef.current.push(obj)\r\n    // //             setSenderDatas(senderDatasRef.current)\r\n    // //         }\r\n\r\n    // //         console.log(obj.id)\r\n    // //         array.map((item) => {\r\n    // //             if (item.id !== obj.id) {\r\n    // //                 senderDatasRef.current.push(obj)\r\n    // //                 setSenderDatas(senderDatasRef.current)\r\n    // //             }\r\n    // //         })\r\n\r\n    // // }\r\n\r\n\r\n    // function getInbox(user) {\r\n    //     setDMEnabledUsers([])\r\n    //     axios.get(`${axios.defaults.baseURL}/api/v1/messages?receiver_id=${user}&receiver_class=User`, userHeaders)\r\n    //         .then((response) => {\r\n    //             setDMEnabledUsers((dmEnabledUsers) => [...dmEnabledUsers, user])\r\n    //             if (response.data.data[0]) {\r\n    //                 if(!senderDatasRef.current.some(e=> e.id === response.data.data[0].id)){\r\n    //                     senderDatasRef.current.push(response.data.data[0])\r\n    //                 }\r\n    //                 // if(senderDatasRef.current.some(e=> console.log(e) === response.data.data[0].id)){\r\n    //                 //     setSenderDatas(senderDatasRef.current)\r\n    //                 // }\r\n    //                 // objIsInArray(senderDatasRef.current, response.data.data[0])\r\n\r\n\r\n    //                 // console.log(response.data.data)\r\n    //             }\r\n    //             // response.data.data[0] ? setSenderDatas((names) => [...names, response.data.data[0].receiver]) : {}\r\n    //         })\r\n    //         .catch((error) => console.log(error))\r\n    // }\r\n\r\n\r\n    useEffect(() => {\r\n        getAllUsers()\r\n        getChannelMembersInbox()\r\n    }, [])\r\n\r\n    useInterval(() => {\r\n        getAllUsers()\r\n        getChannelMembersInbox()\r\n    }, 5000)\r\n\r\n    const getChannelMembersInbox = () => {\r\n        allUserIDs.current.map((user) => {\r\n            axios.get(`${axios.defaults.baseURL}/api/v1/messages?receiver_id=${user}&receiver_class=User`, userHeaders)\r\n                .then((response) => {\r\n                    if (response.data.data[0]) {\r\n                        if (!senderDatasRef.current.some(e => e.id === response.data.data[0].id)) {\r\n                            senderDatasRef.current = [...senderDatasRef.current, response.data.data[0]]\r\n                            setSenderDatas(senderDatasRef.current)\r\n                        }\r\n\r\n                    }\r\n                })\r\n        })\r\n    }\r\n\r\n\r\n    const getChannelMembersID = () => {\r\n        channels.map((channel) => {\r\n            axios.get(`${axios.defaults.baseURL}/api/v1/channels/${channel.id}`, userHeaders)\r\n                .then((response) => {\r\n                    response.data.data.channel_members.map((member) => {\r\n                        isInArray(allUserIDs.current, member.user_id)\r\n\r\n                        //     axios.get(`${axios.defaults.baseURL}/api/v1/messages?receiver_id=${member.user_id}&receiver_class=User`, userHeaders)\r\n                        //     .then((response)=>{\r\n                        //         if(response.data.data[0]){\r\n                        //             if(!senderDatas.some(e=> console.log(e) === response.data.data[0].id)){\r\n                        //                 console.log('ey')\r\n                        //                 senderDatasRef.current.push(response.data.data[0])\r\n                        //                 allUserIDs = []\r\n                        //             }\r\n                        //         }\r\n                        //     })\r\n                        // }\r\n                    })\r\n                })\r\n\r\n\r\n        })\r\n        // getChannelMembersInbox()\r\n    }\r\n\r\n    const getAllUsers = () => {\r\n        axios.get(`${axios.defaults.baseURL}/api/v1/users`, userHeaders)\r\n            .then((response) => {\r\n                getChannelMembersID()\r\n                sendToSelect(response.data.data)\r\n            })\r\n            .catch(error => console.log(error))\r\n    }\r\n\r\n    const sendToSelect = (array) => {\r\n        array.map((user) => {\r\n            if (allUserIDs.current.includes(user.id))\r\n                allDMEnabledUserNames.push({\r\n                    'value': { 'id': user.id, 'name': user.uid },\r\n                    'label': user.uid\r\n                })\r\n        })\r\n        setDMEnabledUsers(allDMEnabledUserNames)\r\n    }\r\n\r\n\r\n    // const getInbox = (allUsers) => {\r\n    //     allUsers.map((user) => {\r\n    //         axios.get(`${axios.defaults.baseURL}/api/v1/messages?receiver_id=${user.id}&receiver_class=User`, userHeaders)\r\n    //             .then((response) => {\r\n    //                 if (response.data.data[0]) {\r\n    //                     if (!senderDatasRef.current.some(user => user.id === response.data.data[0].id)) {\r\n    //                         senderDatasRef.current.push(response.data.data[0])\r\n    //                         setSenderDatas((senderDatas) => [...senderDatas, response.data.data[0]])\r\n    //                     }\r\n    //                 }\r\n    //             })\r\n    //     })\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"w-full text-left font-bold flex items-center hover:text-white p-1 cursor-pointer\" onClick={handleDMsDropdown}>\r\n                <span className=\"px-1\">\r\n                    {directMessagesSubMenuToggle ? <ChevronDownIcon /> : <ChevronRightIcon />}\r\n                </span>Direct Messages\r\n            </h1>\r\n            {directMessagesSubMenuToggle ? senderDatas &&\r\n                <>\r\n                    {senderDatas.map(senderData => {\r\n                        let sender\r\n                        if (senderData.receiver.uid === userHeaders.headers.uid) {\r\n\r\n                            sender = senderData.sender\r\n                        }\r\n                        else {\r\n                            sender = senderData.receiver\r\n                        }\r\n\r\n                        return <label className=\"w-full text-left hover:bg-yellow-900\" onClick={() => { updateChatForm(sender.id, sender.uid, 'User') }}>\r\n                            <input type=\"radio\" name=\"channel\" />\r\n                            <span className=\"pl-3 py-1\">{sender.uid}</span>\r\n                        </label>\r\n                    })}\r\n                </>\r\n                : <></>}\r\n            <span className=\"w-full flex sticky bottom-0  justify-center align-center py-2\"><button className=\"w-11/12 rounded-full text-center text-secondary bg-yellow-300 hover:bg-yellow-400  py-2\" onClick={() => { updateChatForm(null, dmEnabledUsers, 'User') }}>New Message</button></span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SidebarDMs\r\n","import React, { useContext, useEffect, useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport { ChevronDownIcon, ChevronRightIcon, PlusIcon } from '@heroicons/react/solid'\r\nimport AddChannelModal from './AddChannelModal'\r\nimport { Context } from './Store'\r\nimport SidebarDMs from './SidebarDMs'\r\nimport {XIcon} from '@heroicons/react/outline'\r\n\r\nconst Sidebar = ({ userHeaders }) => {\r\n    \r\n    let nameRef = useRef(null)\r\n    const [addChannelModalToggle, setAddChannelModalToggle] = useState(false)\r\n    const [channels, setChannels] = useState([])\r\n    const [updateChannelList, setUpdateChannelList] = useState(true)\r\n    const [IDState, setIDState] = useState('')\r\n    const [channelsSubMenu, setChannelsSubMenu] = useState(true)\r\n    const [nameState, setNameState] = useState('')\r\n    const [receiverClass, setReceiverClass] = useState('')\r\n    const [state, dispatch] = useContext(Context);\r\n    const [sidebar, setSidebar] = useState(false);\r\n    let tempChannels = []\r\n\r\n    let chatInfo = {\r\n        'ID': IDState,\r\n        'name': nameState,\r\n        'receiverClass': receiverClass\r\n    }\r\n\r\n    const updateChatForm = (ID, name, receiverClass) => {\r\n        setIDState(ID)\r\n        setNameState(name)\r\n        setReceiverClass(receiverClass)\r\n    }\r\n\r\n    const handleChannelDropdown = () => {\r\n        channelsSubMenu ? setChannelsSubMenu(false) : setChannelsSubMenu(true)\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: 'PASS_TO_CHATFORM', payload: chatInfo })\r\n    }, [IDState])\r\n\r\n    const getChannelNames = () => {\r\n\r\n        setChannels([])\r\n\r\n        axios.get(`${axios.defaults.baseURL}/api/v1/channels`, userHeaders)\r\n            .then((response) => {\r\n                if (response.data.errors) return null;\r\n\r\n                response.data.data.map((channel) => tempChannels.push(channel))\r\n\r\n                //   response.data.data.map((channel) => setChannels((channels) => [...channels, channel]))\r\n                //   console.log(response.data.data)\r\n                //   console.log(response)\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n            .finally(() => {\r\n                setChannels(tempChannels)\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        getChannelNames()\r\n    }, [updateChannelList])\r\n\r\n\r\n    const addChannel = () => {\r\n        axios.post(`${axios.defaults.baseURL}/api/v1/channels`, {\r\n            \"name\": nameRef.current.value,\r\n            'user_ids': [],\r\n        }, userHeaders)\r\n            .then(() => {\r\n                updateChannelList ? setUpdateChannelList(false) : setUpdateChannelList(true);\r\n                alert('success');\r\n                nameRef.current.value = ''\r\n\r\n            })\r\n            .catch((error) => alert(error))\r\n    }\r\n\r\n    const handleAddChannelButtonClick = () => {\r\n        addChannelModalToggle ? setAddChannelModalToggle(false) : setAddChannelModalToggle(true)\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"absolute inset-y-0 left-0 z-50 -translate-x-full transform  transition duration-200 ease-in-out mobile:translate-x-0 mobile:relative\">\r\n            \r\n            <div className='mobile:block tablet:hidden desktop:hidden'>\r\n                <button onClick={() => setSidebar(false)}>\r\n                    <XIcon className=' h-8 pl-4'/>\r\n                </button>\r\n            </div>\r\n            \r\n            {addChannelModalToggle ? <AddChannelModal handleAddChannelButtonClick={handleAddChannelButtonClick} userHeaders={userHeaders} updateChannelList={updateChannelList} setUpdateChannelList={setUpdateChannelList} /> : <></>}\r\n            <div className=\"bg-secondary channels text-white text-opacity-70 overflow-y-scroll h-screen w-64 z-50 pt-2\">\r\n                <div className=\"channelsWrap\">\r\n\r\n                    <div className=\"w-full text-left font-bold p-1 cursor-pointer flex items-center justify-between\">\r\n                        <div onClick={() => { handleChannelDropdown() }} className=\"hover:text-white flex items-center w-full\">\r\n                            <span className=\"px-1\">\r\n                                {channelsSubMenu ? <ChevronDownIcon /> : <ChevronRightIcon />}\r\n                            </span>My Channels\r\n                        </div>\r\n                        <div className=\"hover:text-white\" onClick={handleAddChannelButtonClick}><PlusIcon /></div>\r\n                    </div>\r\n                    {channelsSubMenu ?\r\n                            channels.map((channel) => (\r\n                                <label className=\"w-full text-left hover:bg-yellow-900\" onClick={() => { updateChatForm(channel.id, channel.name, 'Channel') }}>\r\n                                    <input type=\"radio\" name=\"channel\" />\r\n                                    <span className=\"pl-3 py-1\">{channel.name}</span>\r\n                                </label>\r\n                            ))\r\n                        : <></>}\r\n                </div>\r\n                <SidebarDMs userHeaders={userHeaders} channels={channels} updateChatForm={updateChatForm} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Sidebar","import React, { useContext, useEffect, useState, useRef } from 'react'\r\nimport { Context } from './Store';\r\nimport axios from 'axios'\r\nimport UserSearchBar from './UserSearchBar'\r\nimport { XIcon } from '@heroicons/react/outline'\r\nimport Select from 'react-select';\r\nimport { toast } from 'react-toastify';\r\n\r\n//Modal\r\nimport { UserGroupIcon } from '@heroicons/react/solid'\r\n\r\nconst RightSideNav = ({ userHeaders }) => {\r\n  // console.log(userHeaders)\r\n\r\n  const [state, dispatch] = useContext(Context);\r\n  const [users, setUsers] = useState([]);\r\n  const [members, setMembers] = useState([]);\r\n  const [names, setNames] = useState([]);\r\n  const [showModal, setShowModal] = useState(false);\r\n  let selectOptions = useRef([])\r\n  const [selectedOption, setSelectedOption] = useState()\r\n\r\n  // console.log(state.ChatInfo.name)\r\n  const url = 'https://slackapi.avionschool.com'\r\n  let array = []\r\n  // console.log(state)\r\n  const getMembers = () => {\r\n\r\n    axios.get(`${url}/api/v1/channels/${state.ChatInfo.ID}`, userHeaders)\r\n\r\n      .then((response) => {\r\n        if (response.data.errors) return null;\r\n        // response.data.data.channel_members.map((member) => setMembers((members) => [...members, member]))\r\n\r\n        // return members\r\n        response.data.data.channel_members.forEach(function (member) {\r\n          users.forEach(function (item) {\r\n            // if (item.id === member.nickname) {\r\n            if (item.id === member.user_id) {\r\n              array.push(item)\r\n              // console.log(array)\r\n            }\r\n          })\r\n        })\r\n        setNames(array)\r\n\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMembers()\r\n  }, [state, members])\r\n\r\n  const handleSelectChange = (e) => {\r\n    setSelectedOption(e.value)\r\n\r\n\r\n  }\r\n\r\n  const addMember = () => {\r\n    axios.post(`${url}/api/v1/channel/add_member`, {\r\n      'id': state.ChatInfo.ID,\r\n      'member_id': selectedOption,\r\n    }, userHeaders)\r\n\r\n      .then((response) => {\r\n        console.log(response)\r\n        toast.success('User has been added!')\r\n        setSelectedOption()\r\n        //   getMembers()\r\n        //   console.log(response.data)\r\n\r\n      })\r\n      .catch((error) => alert(error))\r\n  }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    axios.get(`${url}/api/v1/users`, userHeaders)\r\n      .then((response) => {\r\n        setUsers(response.data.data)\r\n        // console.log(response.data)\r\n        response.data.data.map((user) => {\r\n          selectOptions.current.push({\r\n            value: user.id,\r\n            label: user.uid\r\n          })\r\n        })\r\n        console.log(selectOptions)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      })\r\n  }, [])\r\n\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"text-white active:text-primary font-bold uppercase text-sm px-6 py-3 outline-none focus:outline-none mb-1 ease-linear transition-all duration-150 relative right-0\"\r\n        type=\"button\"\r\n        onClick={() => setShowModal(true)}\r\n      >\r\n        <UserGroupIcon className=\"h-6 w-6\" />\r\n      </button>\r\n      {showModal ? (\r\n        <>\r\n          <div\r\n            className=\"text-black container  w-full max-w-xl absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 inset-0 z-50 outline-none focus:outline-none\"\r\n          >\r\n            {/* <div\r\n            className=\"text-black z-50 container  w-full max-w-xl absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2\"\r\n          > */}\r\n            <div className=\"relative w-auto my-6 mx-auto max-w-4xl\">\r\n\r\n              <div className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n\r\n                  <div className='w-full flex justify-between items-center content-center'>\r\n\r\n                    <div className='flex justify-between items-center px-6 content-center' >\r\n                      <span className=\"text-3xl font-semibold\">\r\n                        {state.ChatInfo.name}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\r\n                      <button\r\n                        className=\"text-secondary background-transparent font-bold uppercase text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                        type=\"button\"\r\n                        onClick={() => setShowModal(false)}\r\n                      >\r\n                        <XIcon className='h-6 w-6' />\r\n                      </button>\r\n                    </div>\r\n\r\n                  </div>\r\n\r\n                <div className=\"relative  p-6 flex flex-col max-h-72\">\r\n                  <span className=\"text-gray-500\">Members</span>\r\n                  <div className='z-10 overflow-y-auto my-3'>\r\n                    {names.map((member) => (\r\n                      <ul className=\"my-4 overflow-auto text-sm z-0\">\r\n                        {member.uid}\r\n                      </ul>\r\n                    ))}\r\n                  </div>\r\n                  <div>\r\n                    <Select\r\n                      options={selectOptions.current}\r\n                      onChange={handleSelectChange}\r\n                    />\r\n                    <button className=\"bg-yellow-500 hover:bg-yellow-700 text-white w-14 h-7 px-2 mt-1 font-bold rounded\" onClick={() => { addMember() }}>Add</button>\r\n                  </div>\r\n                </div>\r\n\r\n\r\n                {/* <div className=\"flex items-center justify-end p-6 border-t border-solid border-blueGray-200 rounded-b\">\r\n                  <button\r\n                    className=\"text-secondary background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                    type=\"button\"\r\n                    onClick={() => setShowModal(false)}\r\n                  >\r\n                    <XIcon className='h-6 w-6'/>    \r\n                  </button>\r\n                </div> */}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n        </>\r\n      ) : null}\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default RightSideNav\r\n\r\n\r\n","import React, { useRef, useEffect } from 'react'\r\n\r\nconst ScrollToBottom = () => {\r\n    const elementRef = useRef();\r\n\r\n    useEffect(() => elementRef.current.scrollIntoView());\r\n    \r\n    return <div ref={elementRef} />;\r\n}\r\n\r\nexport default ScrollToBottom\r\n","export default __webpack_public_path__ + \"static/media/NoChatYet.281bc00c.svg\";","import React, { useContext, useEffect, useState, useRef } from 'react'\r\nimport { Context } from './Store';\r\nimport axios from 'axios'\r\nimport RightSideNav from './RightSideNav';\r\nimport { UserCircleIcon } from '@heroicons/react/solid'\r\nimport ScrollToBottom from './ScrollToBottom';\r\nimport Select from 'react-select';\r\nimport useInterval from './useInterval';\r\nimport NoChatVector from '../images/NoChatYet.svg'\r\nimport {MenuIcon} from '@heroicons/react/outline'\r\n// import Sidebar from './Sidebar';\r\n\r\n\r\nconst ChatForm = ({ userHeaders }) => {\r\n    let chatRef = useRef(null)\r\n    // let dateRef = useRef(null)\r\n    let messageRef = useRef([])\r\n    let enableDMUsers = []\r\n    // console.log(userHeaders)\r\n    const url = 'https://slackapi.avionschool.com'\r\n    const [state, dispatch] = useContext(Context);\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [message, setMessage] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    // const [option,setOption] = useState()\r\n    const [selectedUser, setSelectedUser] = useState()\r\n    const [sidebar, setSidebar] = useState(false);\r\n    \r\n\r\n\r\n    useEffect(() => {\r\n        axios.get(`${axios.defaults.baseURL}/api/v1/users`, userHeaders)\r\n            .then((response) => {\r\n                // console.log(response.data)\r\n                setUsers(response.data?.data)\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }, [])\r\n\r\n    if (!state.ChatInfo.ID && state.ChatInfo.name) {\r\n        state.ChatInfo.name.map((userID) => {\r\n            users.map((user) => {\r\n                if (user.id === userID) {\r\n                    enableDMUsers.push({\r\n                        'value': { 'id': user.id, 'name': user.uid },\r\n                        'label': user.uid\r\n                    })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    let date, time\r\n\r\n    const getMessage = (id, receiverClass) => {\r\n        axios.get(`${url}/api/v1/messages?receiver_id=${id}&receiver_class=${receiverClass}`, userHeaders)\r\n            .then((response) => {\r\n                if (messageRef.current.length === 0 || response.data.data.length !== messageRef.current.length) {\r\n                    setMessage([])\r\n                    if (response.data.errors) return null;\r\n                    response.data.data.map((message) => {\r\n                        messageRef.current.push(message)\r\n                        setMessage((messages) => [...messages, message])\r\n                    })\r\n                }\r\n                setIsLoading(false)\r\n\r\n\r\n            })\r\n            .catch((error) => {\r\n                console.log(error);\r\n            })\r\n    }\r\n    // let savedCallback = useRef()\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        if (typeof state.ChatInfo.name !== 'object' || state.ChatInfo.ID !== null) {\r\n            getMessage(state.ChatInfo.ID, state.ChatInfo.receiverClass)\r\n        }\r\n        else if (typeof state.ChatInfo.name !== 'object' || state.ChatInfo.ID !== null) {\r\n            getMessage(selectedUser.value.id, 'User')\r\n        }\r\n\r\n        return setMessage([])\r\n    }, [state, selectedUser])\r\n\r\n    useInterval(() => {\r\n        if (typeof state.ChatInfo.name !== 'object' || state.ChatInfo.ID !== null) {\r\n            getMessage(state.ChatInfo.ID, state.ChatInfo.receiverClass)\r\n        }\r\n        else if (typeof state.ChatInfo.name !== 'object' || state.ChatInfo.ID !== null) {\r\n            getMessage(selectedUser.value.id, 'User')\r\n        }\r\n    }, 1000)\r\n\r\n\r\n    const convTime = (time) => {\r\n        let date = new Date(time)\r\n        let hours = date.getHours();\r\n        let minutes = date.getMinutes();\r\n        let amPm = hours >= 12 ? 'PM' : 'AM';\r\n        hours = hours % 12;\r\n        hours = hours ? hours : 12;\r\n\r\n        if (minutes < 10) {\r\n            minutes = \"0\" + minutes;\r\n        }\r\n\r\n        time = `${hours}:${minutes} ${amPm}`\r\n        // console.log(time)\r\n        return time\r\n\r\n    }\r\n\r\n\r\n    const addMessage = (e, id) => {\r\n        e.preventDefault()\r\n        axios.post(`${url}/api/v1/messages`, {\r\n            'receiver_id': id,\r\n            'receiver_class': state.ChatInfo.receiverClass,\r\n            'body': chatRef.current.value\r\n        }, userHeaders)\r\n            .then((response) => {\r\n                if (typeof state.ChatInfo.name !== 'object' || state.ChatInfo.ID !== null) {\r\n                    getMessage(state.ChatInfo.ID, state.ChatInfo.receiverClass)\r\n                }\r\n                else {\r\n                    getMessage(selectedUser.value.id, 'User')\r\n\r\n                }\r\n               \r\n                // console.log(userHeaders)\r\n                chatRef.current.value = ''\r\n            })\r\n            .catch((error) => alert(error))\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setSelectedUser(e)\r\n        getMessage(e.value.id, 'User')\r\n    }\r\n\r\n    \r\n    let output = []\r\n\r\n    return (\r\n   \r\n        <div className=\"flex h-full overflow-auto flex-col\">\r\n            <div class=\"z-10 bg-yellow-300 text-white sticky top-0 flex items-center justify-between\">\r\n                \r\n                <div className='mobile:block tablet:hidden desktop:hidden'>\r\n                {/* <button onClick={() => setSidebar(!sidebar)}> */}\r\n                <button onClick={() => setSidebar(true)}>\r\n                    <MenuIcon className=' h-8 pl-4'/>\r\n                </button>\r\n                </div>\r\n                \r\n                {typeof state.ChatInfo.name !== 'object' ? <div className='pl-6 font-bold text-xl'>{state.ChatInfo.name}</div> :\r\n                    <Select\r\n                        className=\"w-full px-2 text-secondary outline-none\"\r\n                        value={selectedUser}\r\n                        options={state.ChatInfo.name}\r\n                        onChange={handleChange}\r\n                    />\r\n                }\r\n\r\n            {!state.ChatInfo.receiverClass  ? <></>  : <RightSideNav userHeaders={userHeaders} />}\r\n            </div>\r\n\r\n            <div className=\"flex-1 flex flex-col\">\r\n                <div className=\"h-full sm:items-center px-5 bg-yellow-100 w-full z-0 \">\r\n\r\n                    {state.ChatInfo.receiverClass !== 'Channel' ? \r\n                    <div className='h-full relative flex flex-col justify-center text-center items-center content-center'>\r\n                    <img src={NoChatVector} alt='no chat' className='h-80'/>\r\n                    <span className='pt-8 text-md mobile:text-center font-Poppins font-bold text-yellow-300'>Select a channel/user to begin chatting</span> \r\n                    </div>\r\n                    :   !isLoading ?\r\n                        \r\n                        <div>\r\n\r\n                            {message.map((messages, index) => {\r\n                                output=[]\r\n                                // date = new Date(messages.created_at).toLocaleDateString()\r\n                                date = new Date(messages.created_at).toDateString().slice(0,15)\r\n                                time = convTime(messages.created_at)\r\n\r\n                                if (date !== new Date(message[index - 1]?.created_at).toDateString()) {\r\n                                // if (date !== new Date(message[index - 1]?.created_at).toLocaleDateString()) {\r\n                                    // output.push(<div>{date}</div>)\r\n                                    // output1 =<div>{date}</div>\r\n\r\n                                    output.push(\r\n                                        <div className='w-full flex justify-center items-center pt-2'>\r\n                                            <hr className='flex-1 border-solid border-secondary'/>\r\n                                            <div className='w-auto px-1 border border-secondary rounded-full flex justify-center items-center content-center'>     \r\n                                                <span className='text-xs'> {date} </span>\r\n                                            </div>\r\n                                            <hr className='flex-1 border-solid border-secondary'/>\r\n                                        </div>)\r\n                                }\r\n\r\n                                output.push(<ul className='flex justify-between'>\r\n                                    <div className='w-full' >\r\n                                        <div className='flex content-center items-center'>\r\n                                            <UserCircleIcon className='h-10 w-10 text-secondary' />\r\n                                            <div className='flex flex-col'>\r\n                                            <div className='flex'>\r\n                                            <span className='px-1 text-xs font-bold'> {messages.sender.uid} </span>\r\n                                            {/* <span className='px-1 text-xs'> {date} </span> */}\r\n                                            <span className='text-xs'> {time} </span>\r\n                                        </div>\r\n                                            \r\n                                            <span className={(messages.sender.uid === userHeaders.headers.uid)\r\n                                                ?\r\n                                                'chat_bubble outgoing text-sm shadow-md'\r\n                                                :\r\n                                                'chat_bubble incoming text-sm shadow-md'\r\n                                            }>\r\n                                                {messages.body}\r\n                                            </span>\r\n                                        </div>\r\n                                        </div>\r\n\r\n                                        \r\n                                    </div>\r\n                                </ul>)\r\n\r\n                                return output\r\n                            })}\r\n\r\n                        </div>\r\n                        :\r\n                        <>\r\n                            <div class=\"animate-pulse flex space-x-4 py-5\">\r\n                                <div class=\"rounded-full bg-yellow-400 h-12 w-12\"></div>\r\n                                <div class=\"flex-1 space-y-4 py-1\">\r\n                                    <div class=\"h-4 bg-yellow-400 rounded w-3/4\"></div>\r\n                                    <div class=\"space-y-2\">\r\n                                        <div class=\"h-4 bg-yellow-400 rounded\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"animate-pulse flex space-x-4 py-5\">\r\n\r\n                                <div class=\"flex-1 space-y-4 py-1\">\r\n                                    <div class=\"h-4 bg-yellow-400 rounded w-3/4\"></div>\r\n                                    <div class=\"space-y-2\">\r\n                                        <div class=\"h-4 bg-yellow-400 rounded\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"rounded-full bg-yellow-400 h-12 w-12\"></div>\r\n                            </div>\r\n                            <div class=\"animate-pulse flex space-x-4 py-5\">\r\n                                <div class=\"rounded-full bg-yellow-400 h-12 w-12\"></div>\r\n                                <div class=\"flex-1 space-y-4 py-1\">\r\n                                    <div class=\"h-4 bg-yellow-400 rounded w-3/4\"></div>\r\n                                    <div class=\"space-y-2\">\r\n                                        <div class=\"h-4 bg-yellow-400 rounded\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"animate-pulse flex space-x-4 py-5\">\r\n\r\n                                <div class=\"flex-1 space-y-4 py-1\">\r\n                                    <div class=\"h-4 bg-yellow-400 rounded w-3/4\"></div>\r\n                                    <div class=\"space-y-2\">\r\n                                        <div class=\"h-4 bg-yellow-400 rounded\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"rounded-full bg-yellow-400 h-12 w-12\"></div>\r\n                            </div>\r\n                            <div class=\"animate-pulse flex space-x-4 py-5\">\r\n                                <div class=\"rounded-full bg-yellow-400 h-12 w-12\"></div>\r\n                                <div class=\"flex-1 space-y-4 py-1\">\r\n                                    <div class=\"h-4 bg-yellow-400 rounded w-3/4\"></div>\r\n                                    <div class=\"space-y-2\">\r\n                                        <div class=\"h-4 bg-yellow-400 rounded\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"animate-pulse flex space-x-4 py-5\">\r\n\r\n                                <div class=\"flex-1 space-y-4 py-1\">\r\n                                    <div class=\"h-4 bg-yellow-400 rounded w-3/4\"></div>\r\n                                    <div class=\"space-y-2\">\r\n                                        <div class=\"h-4 bg-yellow-400 rounded\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"rounded-full bg-yellow-400 h-12 w-12\"></div>\r\n                            </div>\r\n                            <div class=\"animate-pulse flex space-x-4 py-5\">\r\n                                <div class=\"rounded-full bg-yellow-400 h-12 w-12\"></div>\r\n                                <div class=\"flex-1 space-y-4 py-1\">\r\n                                    <div class=\"h-4 bg-yellow-400 rounded w-3/4\"></div>\r\n                                    <div class=\"space-y-2\">\r\n                                        <div class=\"h-4 bg-yellow-400 rounded\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"animate-pulse flex space-x-4 py-5\">\r\n\r\n                                <div class=\"flex-1 space-y-4 py-1\">\r\n                                    <div class=\"h-4 bg-yellow-400 rounded w-3/4\"></div>\r\n                                    <div class=\"space-y-2\">\r\n                                        <div class=\"h-4 bg-yellow-400 rounded\"></div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"rounded-full bg-yellow-400 h-12 w-12\"></div>\r\n                            </div>\r\n                        </>\r\n                    }\r\n                    <ScrollToBottom userHeaders={userHeaders} />\r\n                    \r\n                    \r\n                </div>\r\n\r\n            </div>\r\n\r\n            <form className=\"flex-1w-full sticky bottom-0 bg-secondary z-10\">\r\n                <div className=\"p-2 sm:mb-0\">\r\n                    <div className=\"relative flex\">\r\n                        <span className=\"absolute inset-y-0 right-0 flex items-center justify-center content-center px-1\">\r\n                            <button \r\n                            type=\"submit\" \r\n                            className=\"inline-flex items-center justify-center rounded-full h-10 w-10 transition duration-500 ease-in-out text-gray-500 hover:bg-gray-300 focus:outline-none\"\r\n                            onClick={(e) => {\r\n                            if (typeof state.ChatInfo.name === 'object') {\r\n                                addMessage(e, selectedUser.value.id)\r\n                            }\r\n                            else {\r\n                                addMessage(e, state.ChatInfo.ID)\r\n                            }\r\n                            }}>\r\n                            \r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" className=\"h-6 w-6 transform rotate-90\">\r\n                            <path d=\"M10.894 2.553a1 1 0 00-1.788 0l-7 14a1 1 0 001.169 1.409l5-1.429A1 1 0 009 15.571V11a1 1 0 112 0v4.571a1 1 0 00.725.962l5 1.428a1 1 0 001.17-1.408l-7-14z\"></path>\r\n                            </svg>\r\n                            </button>\r\n                        </span>\r\n\r\n                        <input \r\n                        type=\"text\" \r\n                        placeholder=\"Write Something...\" \r\n                        className=\"w-full h-10 focus:outline-none focus:placeholder-gray-400 text-gray-600 placeholder-gray-600 pl-8 bg-gray-200 rounded-full py-3\"\r\n                        ref={chatRef}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n   \r\n\r\n    )\r\n}\r\n\r\nexport default ChatForm","import React from 'react'\r\nimport { Redirect } from \"react-router\";\r\nimport { useLocation } from 'react-router'\r\nimport { useState } from 'react'\r\nimport TopNav from './TopNav'\r\nimport Sidebar from './Sidebar'\r\nimport ChatForm from './ChatForm'\r\n\r\n\r\n\r\n\r\nconst ChatFeed = () => {\r\n\r\n   let location = useLocation()\r\n   let userHeaders = location.state\r\n   \r\n   if (!userHeaders) {\r\n      return <Redirect to=\"/\" />\r\n   }\r\n\r\n   return (\r\n      <>\r\n         <div className='flex'>\r\n         <Sidebar userHeaders={userHeaders} />\r\n            <div className=\"flex flex-col w-full\">     \r\n               <TopNav userHeaders={userHeaders} />\r\n               <ChatForm userHeaders={userHeaders} />\r\n            </div>\r\n         </div>\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ChatFeed\r\n","export default __webpack_public_path__ + \"static/media/BT21.42c38516.gif\";","export default __webpack_public_path__ + \"static/media/bubble.d07a5634.png\";","import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport axios from 'axios';\r\nimport { toast } from 'react-toastify';\r\n\r\n// components\r\nimport Login from './Login'\r\nimport Signup from './Signup';\r\n\r\n// Images\r\nimport BT21 from '../images/BT21.gif'\r\nimport logo from '../images/bubble.png'\r\n\r\n\r\n\r\nconst Homepage = () => {\r\n\r\n    let history = useHistory()\r\n    const [showLoginModal, setShowLoginModal] = useState(false);\r\n    const [showSignupModal, setshowSignupModal] = useState(false);\r\n    \r\n    useEffect(() => {\r\n       \r\n       if(localStorage.email && localStorage.password)\r\n       handleLoggedIn()\r\n    }, [])\r\n    \r\n    \r\n    const handleLoggedIn =() => {\r\n        \r\n        const userData = {\r\n            email: localStorage.email,\r\n            password: localStorage.password,\r\n        }\r\n\r\n        // console.log(userData)\r\n        axios.post(`${axios.defaults.baseURL}/api/v1/auth/sign_in`, userData)\r\n        \r\n            .then((data) => {     \r\n                // toast.success('You successfully logged in')\r\n                const { headers } = data\r\n                \r\n                history.push({\r\n                    pathname: '/chatfeed',\r\n                    state: { headers }\r\n                })\r\n                //save to session storage and local storage\r\n                sessionStorage.setItem('headers', JSON.stringify(data))\r\n                // localStorage.setItem('user', JSON.stringify(userData.email))\r\n                // localStorage.setItem('password',JSON.stringify(userData.password))\r\n                // console.log(data)\r\n            })\r\n            .catch((error) => toast.error('Invalid credentials'))\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex justify-between container m-auto h-screen\">\r\n            \r\n            <div className=\"p-10 flex flex-col justify-around  items-center content-center w-6/12 bg-white\">                \r\n                <img src={BT21} alt='illustration' className='h-3/4'/>           \r\n            </div>\r\n            \r\n            <div className=\"flex-grow flex bg-primary justify-center items-center content-center\">\r\n                <div className='text-secondary flex flex-col justify-center items-center content-center rounded-xl bg-white roundedx p-10'>\r\n                    <img src={logo} alt='logo' className='h-80'/>\r\n                    <button onClick={() => setShowLoginModal(true)}\r\n                    className=\"bg-secondary px-5 py-3 w-40 text-primary transition ease-in-out duration-150\r\n                    font-bold uppercase text-sm rounded-full hover:text-white motion-safe:hover:scale-110\" type=\"button\">Sign in</button>\r\n\r\n            {showLoginModal ? (\r\n                <>\r\n                <Login setShowLoginModal={setShowLoginModal}/>\r\n                <div className=\"opacity-60 fixed inset-0 z-40 bg-black\"></div> \r\n                </>\r\n            ) : <></>}\r\n      \r\n                            \r\n            <span >Don’t have an account?</span>\r\n            <span onClick={() => setshowSignupModal(true)} \r\n            className='font-medium text-secondary underline hover:font-bold hover:text-yellow-400'>\r\n            Sign up here</span>\r\n\r\n\r\n            {showSignupModal ? (\r\n            <>\r\n            <Signup setshowSignupModal={setshowSignupModal}/>\r\n            <div className=\"opacity-60 fixed inset-0 z-40 bg-black\"></div> \r\n            </>\r\n            ) : <></>}\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage","import React from 'react'\r\nimport Store from './components/Store'\r\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\r\n// import { Switch, Route } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n//components\r\nimport Login from './components/Login';\r\nimport Signup from './components/Signup';\r\nimport ChatFeed from './components/ChatFeed';\r\nimport Homepage from './components/Homepage';\r\n\r\n\r\nconst App = () => {\r\n  \r\n  axios.defaults.baseURL = 'https://slackapi.avionschool.com/';\r\n\r\n  return (\r\n    <>\r\n    <Router>\r\n      <Store>\r\n        <Switch>\r\n          <Route exact path=\"/home\"><Homepage /></Route>\r\n          <Route exact path=\"/login\"><Login /></Route>\r\n          <Route exact path=\"/signup\"><Signup /></Route>\r\n          <Route exact path=\"/chatfeed\"><ChatFeed /></Route>\r\n          <Route exact path=\"/\"><Homepage /></Route>\r\n        </Switch>\r\n      </Store>\r\n      </Router>\r\n      <ToastContainer theme='colored'/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>\r\n    \r\n    , document.getElementById('root'));"],"sourceRoot":""}